name: fetch-jobs

on: workflow_dispatch

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch jobs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "================================================"
          echo "=== gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs --jq '.jobs[]' ==="
          jobs=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs --jq '.jobs[]' | jq '.')
          echo "jobs = $jobs"

      - name: Fetch filtered jobs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "================================================"
          jobs=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs \
            --jq '.jobs[]
            | select(.name != "monitor" and .steps != null)')
          echo "jobs = $jobs"

          jobs=(
            $(jq -c '.' <<< $jobs)
          )

          echo ================================

          for j in $jobs[@]; do
            echo "$(jq '.') <<< $j"
          done
  ex1:
    runs-on: ubuntu-latest
    steps:
      - name: Ex1
        run: |
          # ...existing code...

  ex2:
    runs-on: ubuntu-latest
    steps:
      - name: Ex2
        run: |
          # ...existing code...

  always:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Always
        run: |
          # ...existing code...
